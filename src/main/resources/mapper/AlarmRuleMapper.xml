<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zte.msg.alarmcenter.mapper.AlarmRuleMapper">

    <select id="selectRuleExist" resultType="java.lang.Integer" parameterType="com.zte.msg.alarmcenter.dto.req.AlarmRuleReqDTO">
        SELECT count(*) FROM alarm_center.alarm_rule as ar left join filter_system as fs on fs.rule_id=ar.id and ar.is_filter_system=1 and fs.is_deleted=0
        left join filter_position as fp on fp.rule_id=ar.id and ar.is_filter_position=1 and fp.is_deleted=0
        left join filter_device as fd on fd.rule_id=ar.id and ar.is_filter_device=1 and fd.is_deleted=0
        left join filter_alarm as fa on fa.rule_id=ar.id and ar.is_filter_alarm=1 and fa.is_deleted=0
        where
        <if test="alarmRuleReqDTO.systemIds!=null and alarmRuleReqDTO.systemIds.size() > 0">
            fs.system_id in (
            <foreach collection="alarmRuleReqDTO.systemIds" index="index" item="systemId" separator=",">
                #{systemId}
            </foreach>
            ) and
        </if>
        <if test="alarmRuleReqDTO.positionIds!=null and alarmRuleReqDTO.positionIds.size() > 0">
            fp.position_id in (
            <foreach collection="alarmRuleReqDTO.positionIds" index="index" item="positionId" separator=",">
                #{positionId}
            </foreach>
            ) and
        </if>
        <if test="alarmRuleReqDTO.deviceIds!=null and alarmRuleReqDTO.deviceIds.size() > 0">
            fd.device_id in (
            <foreach collection="alarmRuleReqDTO.deviceIds" index="index" item="deviceId" separator=",">
                #{deviceId}
            </foreach>
            ) and
        </if>
        <if test="alarmRuleReqDTO.alarmIds!=null and alarmRuleReqDTO.alarmIds.size() > 0">
            fa.alarm_code_id in (
            <foreach collection="alarmRuleReqDTO.alarmIds" index="index" item="alarmId" separator=",">
                #{alarmId}
            </foreach>
            ) and
        </if>
        ar.is_deleted=0 and ar.type=#{alarmRuleReqDTO.type}
        <if test="id!=null">
            and ar.id!=#{id}
        </if>
    </select>

    <insert id="addAlarmRule"  useGeneratedKeys="true" keyProperty="id" parameterType="com.zte.msg.alarmcenter.dto.req.AlarmRuleReqDTO">
        insert into alarm_rule
        (
            id,
            `type`,
            `name`,
            is_filter_system,
            is_filter_position,
            is_filter_device,
            is_filter_alarm,
            <if test="delayTime!=null">
                delay_time,
            </if>
            <if test="frequency!=null">
                frequency,
            </if>
            <if test="frequencyTime!=null">
                frequency_time,
            </if>
            <if test="experienceTime!=null">
                experience_time,
            </if>
            <if test="msgConfigId!=null">
                msg_config_id,
            </if>
            is_enable,
            created_at,
            created_by
        )
        values
        (
            null,
            #{type},
            #{name},
            #{systemId},
            #{positionId},
            #{deviceId},
            #{alarmId},
            <if test="delayTime!=null">
                #{delayTime},
            </if>
            <if test="frequency!=null">
                #{frequency},
            </if>
            <if test="frequencyTime!=null">
                #{frequencyTime},
            </if>
            <if test="experienceTime!=null">
                #{experienceTime},
            </if>
            <if test="msgConfigId!=null">
                #{msgConfigId},
            </if>
            #{isEnable},
            NOW(),
            #{userId}
        );
        select @@IDENTITY as id;
    </insert>
    <insert id="addAlarmRuleOnSystem">
        insert into filter_system
        (
            id,
            rule_id,
            system_id
        )
        values
        (
            null,
            #{ruleId},
            #{systemId}
        )
    </insert>
    <insert id="addAlarmRuleOnPosition">
        insert into filter_position
        (
            id,
            rule_id,
            position_id
        )
        values
        (
            null,
            #{ruleId},
            #{positionId}
        )
    </insert>
    <insert id="addAlarmRuleOnDevice">
        insert into filter_device
        (
            id,
            rule_id,
            device_id
        )
        values
        (
            null,
            #{ruleId},
            #{deviceId}
        )
    </insert>
    <insert id="addAlarmRuleOnAlarm">
        insert into filter_alarm
        (
            id,
            rule_id,
            alarm_code_id
        )
        values
        (
            null,
            #{ruleId},
            #{alarmId}
        )
    </insert>
    <update id="modifyAlarmRule">
        update alarm_rule
        set
        `type` = #{alarmRuleReqDTO.type},
        `name` = #{alarmRuleReqDTO.name},
        is_filter_system = #{alarmRuleReqDTO.systemId},
        is_filter_position = #{alarmRuleReqDTO.positionId},
        is_filter_device = #{alarmRuleReqDTO.deviceId},
        is_filter_alarm = #{alarmRuleReqDTO.alarmId},
        is_enable = #{alarmRuleReqDTO.isEnable},
        <if test="alarmRuleReqDTO.delayTime!=null">
            delay_time=#{alarmRuleReqDTO.delayTime},
        </if>
        frequency=#{alarmRuleReqDTO.frequency},
        frequency_time=#{alarmRuleReqDTO.frequencyTime},
        experience_time=#{alarmRuleReqDTO.experienceTime},
        <if test="alarmRuleReqDTO.msgConfigId!=null">
            msg_config_id=#{alarmRuleReqDTO.msgConfigId},
        </if>
        updated_at = NOW(),
        updated_by = #{userId}
        WHERE id= #{id}
    </update>
    <delete id="deleteFilter">
        DELETE
            filter_alarm,filter_device,filter_position,filter_system
        FROM filter_alarm,filter_device,filter_position,filter_system,alarm_rule
        WHERE
            alarm_rule.id = filter_alarm.rule_id
        and alarm_rule.id = filter_device.rule_id
        and alarm_rule.id = filter_position.rule_id
        and alarm_rule.id = filter_system.rule_id
        and alarm_rule.id = #{id}
    </delete>
    <update id="deleteAlarmRule">
        update alarm_rule
        set is_deleted = 1
        where id = #{id}
    </update>
    <select id="getAlarmRuleCount" resultType="java.lang.Integer">
        select
            count(1)
        from alarm_rule
        where is_deleted = 0
        <if test="isEnable!=null">
            and is_enable = #{isEnable}
        </if>
        <if test="type!=null">
            and `type` = #{type}
        </if>
        <if test="name!=null and name!=''">
            and `name` like concat('%',#{name},'%')
        </if>
    </select>
    <select id="getAlarmRule" resultType="com.zte.msg.alarmcenter.dto.res.AlarmRuleResDTO">
        select
        ar.id,
        ar.type,
        ar.name,
        ar.is_enable,
        ar.delay_time,
        ar.frequency,
        ar.frequency_time,
        ar.experience_time,
        mc.type as msg_type,
        mc.phone as msg_phone,
        mc.email as msg_email,
        mc.box as msg_box,
        DATE_FORMAT(ar.created_at, "%Y-%m-%d %T") as createdAt,
        DATE_FORMAT(ar.updated_at, "%Y-%m-%d %T") as updatedAt,
        ar.created_by,
        ar.updated_by
        from alarm_rule as ar
        left join msg_config as mc on mc.id=ar.msg_config_id and mc.is_deleted=0
        where ar.is_deleted = 0
        <if test="isEnable!=null">
            and ar.is_enable = #{isEnable}
        </if>
        <if test="type!=null">
            and ar.type = #{type}
        </if>
        <if test="name!=null and name!=''">
            and ar.name like concat('%',#{name},'%')
        </if>
        limit #{page},#{size}
    </select>
    <select id="lookOverAlarmRuleDetails" resultType="com.zte.msg.alarmcenter.dto.res.AlarmRuleDetailsResDTO">
        select
        ar.id,
        ar.type,
        ar.name,
        ar.is_enable,
        ar.delay_time,
        ar.frequency,
        ar.frequency_time,
        ar.experience_time,
        mc.id as msg_config_id,
        mc.type as msg_type,
        mc.phone as msg_phone,
        mc.email as msg_email,
        mc.box as msg_box,
        DATE_FORMAT(ar.created_at, "%Y-%m-%d %T") as createdAt,
        DATE_FORMAT(ar.updated_at, "%Y-%m-%d %T") as updatedAt,
        ar.created_by,
        ar.updated_by
        from alarm_rule as ar
        left join msg_config as mc on mc.id=ar.msg_config_id and mc.is_deleted=0
        where ar.is_deleted = 0 and ar.id = #{id}
    </select>
    <select id="getSubsystemNameList" resultType="com.zte.msg.alarmcenter.dto.res.DataIdAndNameResDTO">
        select
            t.system_id as id,
            t1.`name`
        from filter_system t
        join subsystem t1 on t1.id = t.system_id
        where t.rule_id = #{id} and t1.is_deleted = 0
    </select>
    <select id="getPositionNameList" resultType="com.zte.msg.alarmcenter.dto.res.DataIdAndNameResDTO">
        select
            t.position_id as id,
            t1.`name`
        from filter_position t
        join `position` t1 on t1.id = t.position_id
        where t.rule_id = #{id} and t1.is_deleted = 0
    </select>
    <select id="getDeviceNameList" resultType="com.zte.msg.alarmcenter.dto.res.DataIdAndNameResDTO">
        select
            t.device_id as id,
            t1.`name`
        from filter_device t
        join device t1 on t1.id = t.device_id
        where t.rule_id = #{id} and t1.is_deleted = 0
    </select>
    <select id="getAlarmCodeNameList" resultType="com.zte.msg.alarmcenter.dto.res.DataIdAndNameResDTO">
        select
            t.alarm_code_id as id,
            t1.`name`
        from filter_alarm t
        join alarm_code t1 on t1.id = t.alarm_code_id
        where t.rule_id = #{id} and t1.is_deleted = 0
    </select>
    <select id="getDevices" resultType="com.zte.msg.alarmcenter.dto.res.DeviceResDTO">
        select id, name from device
        <trim prefix="where " suffixOverrides="and">
            <if test="systemIds!=null and systemIds.size()>0">
                system_id in (
                <foreach collection="systemIds" index="index" item="systemId" separator=",">
                    #{systemId}
                </foreach>
                ) and
            </if>
            <if test="stationIds!=null and stationIds.size()>0">
                position_id in (
                <foreach collection="stationIds" index="index" item="stationId" separator=",">
                    #{stationId}
                </foreach>
                ) and
            </if>
            <if test="(systemIds==null or systemIds.size()==0) and (stationIds==null or stationIds.size()==0)">
                <if test="systemIds==null or systemIds.size()==0">
                    system_id=null and
                </if>
                <if test="stationIds==null or stationIds.size()==0">
                    position_id=null and
                </if>
            </if>
        </trim>
    </select>
    <select id="getAlarmCodes" resultType="com.zte.msg.alarmcenter.dto.res.AlarmCodeResDTO">
        SELECT ac.id,ac.code as alarm_code,s.name as system_name,ac.level_id as alarm_level_id,
        ac.name as alarm_name,al.name as alarm_level_name
        FROM alarm_code as ac left join subsystem as s on s.id=ac.system_id and s.is_deleted=0
        left join alarm_level as al on ac.level_id=al.code and al.is_deleted=0
        where ac.is_deleted=0
        <if test="systemIds!=null and systemIds.size()>0">
            and ac.system_id in (
            <foreach collection="systemIds" index="index" item="systemId" separator=",">
                #{systemId}
            </foreach>
            )
        </if>
        <if test="systemIds==null or systemIds.size()==0">
            and ac.system_id=null
        </if>
    </select>
    <insert id="insertMsgPush">
        INSERT into msg_push_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="msgConfig.type!=null">
                type,
            </if>
            <if test="msgConfig.phone!=null">
                phone,
            </if>
            <if test="msgConfig.email!=null">
                email,
            </if>
            <if test="msgConfig.box!=null">
                box,
            </if>
            <if test="content!=null">
                content,
            </if>
        </trim>
        VALUE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="msgConfig.type!=null">
                #{msgConfig.type},
            </if>
            <if test="msgConfig.phone!=null">
                #{msgConfig.phone},
            </if>
            <if test="msgConfig.email!=null">
                #{msgConfig.email},
            </if>
            <if test="msgConfig.box!=null">
                #{msgConfig.box},
            </if>
            <if test="content!=null">
                #{content},
            </if>
        </trim>
    </insert>
    <select id="getMsgConfigs" resultType="com.zte.msg.alarmcenter.entity.MsgConfig">
        select * from msg_config where is_deleted=0
    </select>
    <select id="selectMsgConfigById" resultType="com.zte.msg.alarmcenter.entity.MsgConfig">
        select * from msg_config where is_deleted=0 and id=#{msgConfigId} and status=0
    </select>
</mapper>